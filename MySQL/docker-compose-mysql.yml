services:
  mysql-master:
    container_name: mysql-master
    build:
      context: ./
      dockerfile: master/mysql-master.Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: example
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3306:3306'
    volumes:
      - db-master:/var/lib/mysql
    networks:
      - mysql-net

  mysql-slave:
    container_name: mysql-slave
    build:
      context: ./
      dockerfile: slave/mysql-slave.Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: example
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3307:3306'
    volumes:
      - db-slave:/var/lib/mysql
    networks:
      - mysql-net

  orchestrator:
    image: openarkcode/orchestrator:latest
    container_name: orchestrator
    ports:
      - '3000:3000' # Web UI
    volumes:
      - ./orchestrator/orchestrator.conf.json:/etc/orchestrator.conf.json
    networks:
      - mysql-net
    depends_on:
      - mysql-master
      - mysql-slave

  proxysql:
    image: proxysql/proxysql:latest
    container_name: proxysql
    ports:
      - '6032:6032' # Admin UI
      - '6033:6033' # MySQL Proxy Port
    volumes:
      - ./proxysql/proxysql.cnf:/etc/proxysql.cnf
    networks:
      - mysql-net
    depends_on:
      - mysql-master
      - mysql-slave

volumes:
  db-master:
  db-slave:

networks:
  mysql-net:
    driver: bridge
